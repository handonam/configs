function tl() { cd ~/Workspace/"$@"; }
function punk() { cd ~/Workspace/popup-notification-kit/"$@"; }

alias ls="ls -G $@"
alias ll="ls -Glah"
alias sudo="sudo "
alias ..="cd .."
alias cls='printf "\033c"'

function tree() 
{
echo
if [ "$1" != "" ]  #if parameter exists, use as base folder
   then cd "$1"
      fi
      pwd
      ls -R | grep ":$" |   \
         sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
# 1st sed: remove colons
# 2nd sed: replace higher level folder names with dashes
# 3rd sed: indent graph three spaces
# 4th sed: replace first dash with a vertical bar
if [ `ls -F -1 | grep "/" | wc -l` = 0 ]   # check if no folders
   then echo "   -> no sub-directories"
      fi
   echo
}

## Git!
function gst() { git status "$@"; }
function ga() { git add "$@"; }
function gd() { git diff --color-words="[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+" "$@"; }
function gl() { echo "git log --graph --stat "; git log --graph --stat "$@"; }
function gm() { git branch --merged | egrep -v "(^\*|master|dev)" | xargs git branch -d; }
function gitmod()  { git status --porcelain | sed 's/^ M / /'; }
function getUser() { curl --request POST \
  --url https://experimentassignment-e2e.api.intuit.com/api/v3/assignments/businessUnits/CG/users/"$@" \
  --header 'Accept: application/json' \
  --header 'Content-Type: application/json' \
  --cookie 'qbn.ptc.ticket=V1-153-E3pl95q6yy240w43gaj8nq; qbn.ptc.authid=9059977971021231; qbn.ptc.agentid=9059977971021231; qbn.ptc.parentid=50000003' \
  --data '{
  "assignmentFilter": {
    "applications": [
      "TurboTax_NavUtility"
    ]
  },
  "context": {
    "productId": "5016",
    "isTTUReferrer": "false"
  },
  "options": {
    "allowDynamicWLBL": false,
    "allowRemoteAssgmnts": true,
    "existingPersistentAssgmntsOnly": true,
    "includePersistentAssgmnts": true,
    "includeRemoteTaggedIds": false,
    "runningPersistentExptsOnly": true
  }
}'; }
function getUserProd() { curl --request POST \
  --url https://experimentassignment.api.intuit.com/api/v4/assignments/businessUnits/CG/users/"$@" \
  --header 'Accept: application/json' \
  --header 'Content-Type: application/json' \
  --cookie 'qbn.ptc.ticket=V1-153-E3pl95q6yy240w43gaj8nq; qbn.ptc.authid=9059977971021231; qbn.ptc.agentid=9059977971021231; qbn.ptc.parentid=50000003' \
  --data '{
  "assignmentFilter": {
    "applications": [
      "TurboTax_NavUtility"
    ]
  },
  "context": {
    "productId": "5016",
    "isTTUReferrer": "false"
  },
  "options": {
    "allowDynamicWLBL": false,
    "allowRemoteAssgmnts": true,
    "existingPersistentAssgmntsOnly": true,
    "includePersistentAssgmnts": true,
    "includeRemoteTaggedIds": false,
    "runningPersistentExptsOnly": true
  }
}'; }


function startTmux() {

  if [ "$1" != "" ] 
    then workDirectory=$1
    else workDirectory='hub-x'
  fi

  session="work"

  # set up tmux
  tmux start-server

  # create a new tmux session, starting vim from a saved session in the new window
  tmux new-session -d -s $session


  # Select pane 1
  tmux selectp -t 1 
  # hub-x
  tmux rename-window $workDirectory
  tmux send-keys "tl $workDirectory;"
  tmux send-keys Enter
  tmux send-keys "code ." #start VSCode
  tmux send-keys Enter

  # Split pane 1 vertically by 50%, start yarn
  tmux splitw -v -p 50
  tmux send-keys "tl $workDirectory;"
  tmux send-keys Enter
  tmux send-keys "yarn serve"
  tmux send-keys Enter

  # Select pane 1
  tmux selectp -t 1

  # create a new window called bpytop
  tmux new-window -t $session:99 -n byptop # use `C-a '` or `C-a w` to get there.
  tmux send-keys "bpytop;"
  tmux send-keys Enter

  # return to main vim window
  tmux select-window -t $session:1

  # Finished setup, attach to the tmux session!
  tmux attach-session -t $session
}


function workSession() {
  if [ "$1" != "" ] 
    then workDirectory=$1
    else workDirectory='hub-x'
  fi

  session="work"
  tmux new-window -t $session -n $workDirectory

  # Select pane 1
  tmux selectp -t 1 
  # hub-x
  tmux rename-window $workDirectory
  tmux send-keys "tl $workDirectory;"
  tmux send-keys Enter
  tmux send-keys "code ." #start VSCode
  tmux send-keys Enter

  # Split pane 1 vertically by 50%, start yarn
  tmux splitw -v -p 50
  tmux send-keys "tl $workDirectory;"
  tmux send-keys Enter
  tmux send-keys "yarn serve --no-prelint"
  tmux send-keys Enter
}


function startHomelab() {
  session2="homelab"
  tmux new-session -d -s $session2
  tmux select-window -t $session2:1

  # Select pane 1
  tmux rename-window -t $session2:1 'Homelab'
  tmux send-keys -t $session2:1 "ssh -p22122 Handonas@192.168.50.170"
  tmux send-keys -t $session2:1 Enter

  # Split pane 1 vertically by 50%, start OPNsense
  tmux splitw -t $session2:1 -v -p 50
  tmux send-keys -t $session2:1 "ssh -p2059 root@192.168.50.250"
  tmux send-keys -t $session2:1 Enter
  tmux attach-session -t $session2
}
